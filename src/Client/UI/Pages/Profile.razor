@page "/profile"
@using Concerto.Shared.Models.Dto
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http

@attribute [Authorize]

@inject ITranslationsService t

<h1>@t.T("profile", "title")</h1>

@if (userData == null)
{
	<MudProgressCircular Color="Color.Default" Indeterminate="true"/>
}
else
{
	<MudStack>
		<MudPaper Class="pa-4">
			<MudStack Row="true">
                <MudIcon Icon="@Icons.Material.Filled.TableRows" Title=@t.T("profile", "details")/>
				<MudStack Justify="Justify.Center" Spacing="4">
					<MudStack Justify="Justify.Center" Spacing="0">
                        <MudText Typo="Typo.body1">@t.T("profile", "userName")</MudText>
						<MudText Class="pl-2" Typo="Typo.body2">@userData.Username</MudText>
					</MudStack>
					<MudStack Justify="Justify.Center" Spacing="0">
                        <MudText Typo="Typo.body1">@t.T("profile", "firstName")</MudText>
						<MudText Class="pl-2" Typo="Typo.body2">@userData.FirstName</MudText>
					</MudStack>
					<MudStack Justify="Justify.Center" Spacing="0">
                        <MudText Typo="Typo.body1">@t.T("profile", "lastName")</MudText>
						<MudText Class="pl-2" Typo="Typo.body2">@userData.LastName</MudText>
					</MudStack>
					<MudStack Justify="Justify.Center" Spacing="0">
                        <MudText Typo="Typo.body1">@t.T("profile", "userId")</MudText>
						<MudText Class="pl-2" Typo="Typo.body2">@userData.Id</MudText>
					</MudStack>
				</MudStack>
			</MudStack>
		</MudPaper>
	</MudStack>
}


@code {
	private User? userData;

	protected override async Task OnInitializedAsync()
	{
		userData = await Http.GetFromJsonAsync<User?>("User/GetCurrentUser");
	}

}