@page "/authentication/{action}"
@using Concerto.Client.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject IAccountClient AccountService
@inject IUserService UserService
@inject NavigationManager Navigation


<RemoteAuthenticatorView Action="@Action" OnLogInSucceeded="OnLogInSucceeded">
	
	<LogInFailed>
		<div class="d-flex align-center justify-center" style="height: 100%">
			<MudText role="alert" Style="text-align: center; margin:auto;" Typo="Typo.h4">@strLogInFailed</MudText>
		</div>
	</LogInFailed>
	<LogOut>
		<div class="d-flex align-center justify-center" style="height: 100%">
			<MudSkeleton Style="position: absolute" Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Width="100%" Height="100%" />
			<MudText role="alert" Style="text-align: center; margin:auto;" Typo="Typo.h4">@strLogOut</MudText>
		</div>
	</LogOut>
	<LogOutSucceeded>
		<div class="d-flex align-center justify-center" style="height: 100%">
			<MudText role="alert" Style="text-align: center; margin:auto;" Typo="Typo.h4">@strLogOutSucceeded</MudText>
		</div>
	</LogOutSucceeded>
	<LoggingIn>
		<div class="d-flex align-center justify-center" style="height: 100%">
			<MudSkeleton Style="position: absolute" Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Width="100%" Height="100%" />
			<MudText role="alert" Style="text-align: center; margin:auto;" Typo="Typo.h4">@strLoggingIn</MudText>
		</div>
	</LoggingIn>
	<CompletingLoggingIn>
		<div class="d-flex align-center justify-center" style="height: 100%">
			<MudSkeleton Style="position: absolute" Animation="Animation.Wave" SkeletonType="SkeletonType.Rectangle" Width="100%" Height="100%" />
			<MudText role="alert" Style="text-align: center; margin:auto;" Typo="Typo.h4">@strCompletingLoggingIn</MudText>
		</div>
	</CompletingLoggingIn>
</RemoteAuthenticatorView>

@code {

	[CascadingParameter]
	private Task<AuthenticationState>? AuthenticationStateTask { get; set; }

	[Parameter]
	public string? Action { get; set; }

	string strLogInFailed = "Your login was not successful.";
	string strLogOut = "Logging out...";
	string strLogOutSucceeded = "You have been logged out successfully";
	string strLoggingIn = "Redirecting you to the login screen...";
	string strCompletingLoggingIn = "Login successful. One moment...";

	private async Task OnLogInSucceeded()
	{
		await AccountService.AfterLoginAsync();
	}

	void OnLogOutSucceeded()
	{
	}

}