@inject IWorkspaceService WorkspaceService
@inject ISnackbar Snackbar
@inject ITranslationsService t
@inherits DialogAutoFullscreen


<MudDialog Class="" Style="max-height: 100vh; overflow:auto;" ContentStyle="" ClassContent="d-flex flex-column">
	<DialogContent>

		<MudForm @ref="form" @bind-IsValid="valid" Style="min-width: 550px">
			<MudTextField Required="true" RequiredError="@t.T("createWorkspaceDialog", "workspaceNameCannotBeEmpty")" Variant="Variant.Outlined" Class="my-2" @bind-Value="_name" T="string" Label="@t.T("createWorkspaceDialog", "workspaceName")" Margin="Margin.Dense"></MudTextField>
			<MudTextField Variant="Variant.Outlined" Class="my-2" @bind-Value="_description" T="string" Label="@t.T("createWorkspaceDialog", "workspaceDescription")" Margin="Margin.Dense"></MudTextField>
		</MudForm>
	</DialogContent>
	<DialogActions>
		<MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="Cancel">@t.T("createWorkspaceDialog", "cancel")</MudButton>
		<MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="Submit" Disabled="!form?.IsValid ?? true">@t.T("createWorkspaceDialog", "create")</MudButton>
	</DialogActions>
</MudDialog>


@code {
	private string? _name;
	private string? _description;

	MudForm form;
	bool valid;


	private async Task Submit()
	{
		if (string.IsNullOrEmpty(_name))
		{
			Snackbar.Add(@t.T("createWorkspaceDialog", "workspaceNameCannotBeEmpty"), Severity.Error);
			return;
		}

		// Move to workspace manager
		var request = new CreateWorkspaceRequest
		{
			Name = _name,
			Description = _description ?? string.Empty,
		};

		try
		{
			var newWorkspaceId = await WorkspaceService.CreateWorkspaceForCurrentUserAsync(request);
			Snackbar.Add(@t.T("createWorkspaceDialog", "workspaceCreated"), Severity.Success);
			Dialog.Close(DialogResult.Ok(newWorkspaceId));
		}
		catch
		{
			Snackbar.Add(@t.T("createWorkspaceDialog", "failedToCreateWorkspace"), Severity.Error);
		}
	}

	void Cancel()
	{
		Dialog.Cancel();
	}
}